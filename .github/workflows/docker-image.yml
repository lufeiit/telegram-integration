name: Docker

on:
  push:
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # 检出代码库
      - name: Checkout repository
        uses: actions/checkout@v3

      # 将仓库名称转换为小写并设置 IMAGE_NAME
      - name: Set lowercase image name
        run: echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      # 启用 Docker 层缓存
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      # 设置 QEMU 以支持多平台构建
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 安装 cosign 用于镜像签名
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.4.0
        with:
          cosign-release: 'v2.2.2'

      # 设置 Docker Buildx 以支持多平台构建
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.2.0

      # 登录 GitHub 容器注册表
      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 构建并推送 Docker 镜像，支持多平台，启用层缓存
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64  # 多平台支持
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha  # 使用 GitHub Action 缓存层
          cache-to: type=gha,mode=max

      # 签署镜像，仅包含 latest 标签
      - name: Sign the published Docker image
        env:
          TAGS: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
